# 条件を満たす pid を特定
selected_pids <- filtered_data %>%
    # wave列が1から5までの値を持つことを確認
    group_by(pid) %>%
    filter(all(wave %in% 1:5)) %>%
    # Wave 1 から Wave 5 まで log_total_income が 0 より大きいことを確認
    filter(all(log_total_income > 0)) %>%
    # Wave 1 から Wave 5 まで weight が有効値（欠損していない）であることを確認
    filter(all(!is.na(weight))) %>%
    ungroup() %>%
    select(pid) %>%
    distinct()

# 条件を満たすデータを抽出
selected_data <- filtered_data %>%
  filter(pid %in% selected_pids$pid)

# 基本的なTWFE
result_selected <- plm(log_total_income ~ EverMigrant + empl_stat + best_age_yrs,
                       data = selected_data,
                       model = "within",
                       effect = "twoways",
                       index = c("pid", "wave"))
print(summary(result_selected))

# 条件を満たすデータを抽出
migration_type_time <- filtered_data %>%
    filter(pid %in% selected_pids$pid)

# 移住タイプ別 + 弾性効果分析モデル
result_selected <- plm(log_total_income ~ rr : t4 + rr : t3 + rr : t2 + rr : t1 
                       + uu : t4 + uu : t3 + uu : t2 + uu : t1 
                       + ru : t4 + ru : t3 + ru : t2 + ru : t1 
                       + ur : t4 + ur : t3 + ur : t2 + ur : t1 
                       + empl_stat + best_age_yrs,
                       data = migration_type_time,
                       model = "within",
                       effect = "twoways",
                       index = c("pid", "wave"))

# 表示
print(summary(result_selected))

# 教育達成度のダミー化
library(dplyr)

# filtered_data に新しい列を追加し、条件に基づいて値を割り当てる
filtered_data <- filtered_data %>%
  mutate(
    No_Schooling = ifelse(best_edu == 0, 1, 0),
    No_Matric = ifelse(best_edu %in% c(1, 2), 1, 0),
    Matric = ifelse(best_edu %in% c(3, 4), 1, 0)
  )


# 教育と移住の相互作用項
result_selected <- plm(log_total_income ~ rr : No_Schooling + uu : No_Schooling + ru : No_Schooling + ur : No_Schooling 
+ rr : No_Matric + uu : No_Matric + ru : No_Matric + ur : No_Matric
+ rr : Matric + uu : Matric + ru : Matric + ur : Matric + best_age_yrs,
                       data = selected_data,
                       model = "within",
                       effect = "twoways",
                       index = c("pid", "wave"))
print(summary(result_selected))
