# 結果を格納するためのリスト
models <- list()



# Wave 1 から 5 までループ
for (i in 1:5) {
    if (i != 1) {  # Wave 1 は除外
        # データのフィルタリング
        wave_data <- filtered_data %>%
            filter(wave %in% c(1, i)) %>%
            na.omit(weight)
        
        # データ型の変換
        wave_data$dummy <- as.numeric(wave_data$dummy)
        wave_data$EverMigrant <- as.numeric(wave_data$EverMigrant)
        wave_data$wave <- as.factor(wave_data$wave)
        wave_data$pid <- as.factor(wave_data$pid)
        wave_data$weight <- as.numeric(wave_data$weight)
        
        # モデルの推定
        model <- lm_robust(
            log_total_income ~ dummy : EverMigrant + best_age_yrs,
            weights = wave_data$weight,
            data = wave_data,
            clusters = cluster,
            se_type = "stata"
        )
        
        # 結果をリストに保存
        models[[paste("Wave1_Wave", i)]] <- model
    }
}

# 結果を保存するデータフレームを作成
results_df <- data.frame(Wave = character(),
                         Coefficients = numeric(),
                         StandardError = numeric(),
                         tValue = numeric(),
                         Pr = numeric(),
                         stringsAsFactors = FALSE)

# 各モデルの結果を抽出
for (name in names(models)) {
    model_summary <- summary(models[[name]], robust = TRUE)
    
    # coef関数を使用して係数のテーブルを取得
    coef_table <- coef(model_summary)
    
    # dummy:EverMigrant の係数を取得（存在する場合）
    if ("dummy:EverMigrant" %in% rownames(coef_table)) {
        coef_info <- coef_table["dummy:EverMigrant", ]
        
        # データフレームに結果を追加
        results_df <- rbind(results_df, data.frame(Wave = name,
                                                   Coefficients = coef_info["Estimate"],
                                                   StandardError = coef_info["Std. Error"],
                                                   tValue = coef_info["t value"],
                                                   Pr = coef_info["Pr(>|t|)"]))
    }
}

# 結果を確認
print(results_df)

# CSV ファイルに保存
write.csv(results_df, file = "model_results.csv", row.names = FALSE)
